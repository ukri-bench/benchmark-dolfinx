# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# trigger:
# - azure-pipelines

trigger:
- none

parameters:
- name: IMAGE_NAME
  displayName: 'Image name'
  type: string
  default: 'notset'
- name: TAG
  displayName: 'Image tag'
  type: string
  default: 'notset'

pool:
  # name: ci-runner-gpu0
  name: ci-runner-gpu3

steps:
- task: Docker@2
  displayName: Login into ghcr.io
  inputs:
    command: login
    containerRegistry: ghcr-io

- script: |
    curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \
      && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
        sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
        sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
    sudo apt-get update
    sudo apt-get install -y nvidia-container-toolkit
    sudo nvidia-ctk runtime configure --runtime=docker
    sudo systemctl restart docker
  displayName: 'Install Nvidia container kit'

- script: |
    docker run --runtime=nvidia --gpus all \
      ghcr.io/ukri-bench/${{parameters.IMAGE_NAME}}:${{parameters.TAG}} \
      bench_dolfinx --ndofs=10000 --degree=3 --qmode=0 --nreps=1 --mat_comp --float=64 --json a.json
  displayName: 'Run benchmark (serial)'

- script: |
    docker run --env OMPI_ALLOW_RUN_AS_ROOT=1 --env OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1 \
      --runtime=nvidia --gpus all \
      ghcr.io/ukri-bench/${{parameters.IMAGE_NAME}}:${{parameters.TAG}} \
      bench_dolfinx --ndofs=10000 --degree=3 --qmode=0 --nreps=1 --mat_comp --float=64 \
      --json a.json
  displayName: 'Run benchmark (MPI)'
