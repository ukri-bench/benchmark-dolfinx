name: AWS run (runs-on)

on:
  workflow_dispatch:
    inputs:
      container_tag:
        description: 'Container hash'
        required: true
        type: string
  workflow_call:
    inputs:
      container_tag:
        description: 'Container hash'
        required: true
        type: string

env:
  GITHUB_USER: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on:
      # - runs-on=${{github.run_id}}/runner=2cpu-linux-x64/image=ubuntu24-gpu-x64/region=us-east-2
      - runs-on=${{ github.run_id }}
      - family=g4dn.xlarge     # NVIDIA T4 GPU
      - region=us-east-2
      - image=ubuntu24-gpu-x64
      - spot=true
      - tag=nv

    container:
      image: ghcr.io/ukri-bench/spack-buildcache-cuda:${{ inputs.container_tag }}
      options: --gpus all
      env:
        OMPI_ALLOW_RUN_AS_ROOT: 1
        OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
        PRTE_MCA_rmaps_default_mapping_policy: :oversubscribe
    steps:
      - uses: actions/checkout@v4  # To get post-processing script
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ghcr.io
      #     username: ${{github.actor}}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      # - name: Run (CPU)
      #   run: |
      #     docker run --runtime=nvidia --gpus all \
      #       ghcr.io/ukri-bench/spack-buildcache-cuda:e2c77d9a807741c6a6264119ae2831f3c9fbc5cc \
      #       bench_dolfinx --ndofs=10000 --degree=3 --qmode=0 --nreps=1 --mat_comp --float=64 --json a.json

      # - name: Install CUDA
      #   run: |
      #     apt-get update
      #     apt-get install -y wget
      #     wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/cuda-keyring_1.1-1_all.deb
      #     dpkg -i cuda-keyring_1.1-1_all.deb
      #     apt-get update
      #     apt-get -y install cuda-cudart-12-9
      - name: Run (GPU, serial)
        run: |
          bench_dolfinx --ndofs=10000 --degree=3 --qmode=0 --nreps=1 --mat_comp --float=64 --json a.json
      - name: Check MPI
        run: |
          ompi_info --parsable --all | grep mpi_built_with_cuda_support:value
      - name: Run (GPU, MPI))
        run: |
          mpirun -np 2 bench_dolfinx --ndofs=10000 --degree=3 --qmode=0 --nreps=1 --mat_comp --float=64 --json a.json
