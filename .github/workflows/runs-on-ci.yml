name: Spack build (runs-on)

on:
  # Uncomment the below 'push' to trigger on push
  push:
    branches:
      - "**"
  # pull_request:
  #   branches: [ "main" ]
  # merge_group:
  #   branches:
  #     - main
  workflow_dispatch:

env:
  GITHUB_USER: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    strategy:
      matrix:
        backend:
          [
            { runtime: cpu, driver: ''},
            # { runtime: rocm, driver: amdgpu_target=gfx90a },
            { runtime: cuda, driver: cuda_arch=80 },
          ]
    # runs-on: ubuntu-24.04
    # runs-on: runs-on=${{ github.run_id }}/runner=2cpu-linux-x64
    # runs-on: runs-on=${{ github.run_id }}/image=ubuntu24-full-arm64/runner=2cpu-linux-x64
    # runs-on: runs-on=${{ github.run_id }}/image=ubuntu24-full-x64/family=m7i.large
    # runs-on: runs-on=${{ github.run_id }}/image=ubuntu24-full-x64/family=m7i.large
    # runs-on: runs-on=${{github.run_id}}/runner=2cpu-linux-x64/image=ubuntu24-full-x64
    runs-on: runs-on=${{github.run_id}}/runner=2cpu-linux-x64/image=ubuntu24-gpu-x64


    permissions:
      packages: write

    steps:
      - name: Info
        run: |
          uname -a
          lsb_release -a
          gcc -v
          nvcc --version
          hipcc --version


    # steps:
      - uses: actions/checkout@v4

      # - if: ${{ matrix.backend.runtime == 'rocm' }}
      #   name: Install ROCm
      #   uses: ukri-bench/spack-configs/actions/rocm@main

      # - if: ${{ matrix.backend.runtime == 'cuda' }}
      #   name: Install CUDA
      #   uses: ukri-bench/spack-configs/actions/cuda@main

      - name: Set up Spack
        uses: spack/setup-spack@v2
        with:
          ref: develop # Spack version (examples: develop, releases/v0.23)
          color: true # Force color output (SPACK_COLOR=always)
          path: spack-src # Where to clone Spack      # - name: Get Spack

      - if: ${{ matrix.backend.runtime == 'cpu' }}
        name: Get Spack config (CPU)
        run: |
          wget -O spack.yml https://raw.githubusercontent.com/ukri-bench/spack-configs/refs/heads/main/configs/gh-actions/spack.yml
      - if: ${{ matrix.backend.runtime == 'cuda' }}
        name: Get Spack config (CUDA)
        run: |
          wget -O spack.yml https://raw.githubusercontent.com/ukri-bench/spack-configs/refs/heads/main/configs/gh-actions/spack-cuda.yml
      - if: ${{ matrix.backend.runtime == 'rocm' }}
        name: Get Spack config (ROCm)
        run: |
          wget -O spack.yml https://raw.githubusercontent.com/ukri-bench/spack-configs/refs/heads/main/configs/gh-actions/spack-rocm.yml

      - name: Add ukri-bench Spack repository and create environment
        shell: spack-bash {0}
        run: |
          spack repo add --name bench_pkgs https://github.com/ukri-bench/spack-packages.git ./bench_pkgs
          spack env create . spack.yml
          spack -e . mirror add --unsigned --type binary --oci-username-variable GITHUB_USER --oci-password-variable GITHUB_TOKEN local-buildcache oci://ghcr.io/ukri-bench/spack-buildcache
          spack -e . config get mirrors


      - if: ${{ matrix.backend.runtime == 'cpu' }}
        name: Install (CPU)
        shell: spack-bash {0}
        run: |
          spack -e . install -j 4 --use-buildcache=package:never,dependencies:auto --add bench-dolfinx

      - if: ${{ matrix.backend.runtime == 'cuda' || matrix.backend.runtime == 'rocm' }}
        name: Install (GPU)
        shell: spack-bash {0}
        run: |
          spack -e . install -j 4 --use-buildcache=package:never,dependencies:auto --add bench-dolfinx+${{ matrix.backend.runtime }} ${{ matrix.backend.driver }}

      - name: Push packages and update index
        shell: spack-bash {0}
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: spack -e . buildcache push --base-image ubuntu:24.04 --update-index local-buildcache
        if: ${{ !cancelled() }}
