name: Test benchmark

on:
  # Uncomment the below 'push' to trigger on push
  push:
    branches:
      - "**"
  pull_request:
    branches: [ "main" ]
  merge_group:
    branches:
      - main
  # schedule:
  #   # '*' is a special character in YAML, so string must be quoted
  #   - cron: "0 2 * * THU"
  workflow_dispatch:

env:
  GITHUB_USER: ${{ github.actor }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    strategy:
      matrix:
        backend:
          [
            { runtime: cpu},
            # { runtime: rocm, driver: amdgpu_target=gfx90a, cmake_opt: HIP_ARCH=gfx90a },
            # { runtime: cuda, driver: cuda_arch=80, cmake_opt: CUDA_ARCH=80 },
          ]
    runs-on: ubuntu-24.04
    permissions:
      packages: write

    steps:
      - uses: actions/checkout@v4

      - if: ${{ matrix.backend.runtime == 'rocm' }}
        name: Install ROCm
        uses: ukri-bench/spack-configs/actions/rocm@main

      - if: ${{ matrix.backend.runtime == 'cuda' }}
        name: Install CUDA
        uses: ukri-bench/spack-configs/actions/cuda@main

      - name: Set up Spack
        uses: spack/setup-spack@v2
        with:
          ref: develop    # Spack version (examples: develop, releases/v0.23)
          color: true     # Force color output (SPACK_COLOR=always)
          path: spack-src # Where to clone Spack      # - name: Get Spack

      - if: ${{ matrix.backend.runtime == 'cpu' }}
        name: Get Spack config (CPU)
        run: |
          wget -O spack.yml https://raw.githubusercontent.com/ukri-bench/spack-configs/refs/heads/main/configs/gh-actions/spack.yml
      - if: ${{ matrix.backend.runtime == 'cuda' }}
        name: Get Spack config (CUDA)
        run: |
          wget -O spack.yml https://raw.githubusercontent.com/ukri-bench/spack-configs/refs/heads/main/configs/gh-actions/spack-cuda.yml
      - if: ${{ matrix.backend.runtime == 'rocm' }}
        name: Get Spack config (ROCm)
        run: |
          wget -O spack.yml https://raw.githubusercontent.com/ukri-bench/spack-configs/refs/heads/main/configs/gh-actions/spack-rocm.yml

      - name: Add ukri-bench Spack repository and create environment
        shell: spack-bash {0}
        run: |
          spack repo add --name bench_pkgs https://github.com/ukri-bench/spack-packages.git ./bench_pkgs
          spack mirror add --unsigned --type binary --oci-username-variable GITHUB_USER --oci-password-variable GITHUB_TOKEN local-buildcache oci://ghcr.io/ukri-bench/spack-buildcache
          spack env create . spack.yml

      - if: ${{ matrix.backend.runtime == 'cpu' }}
        name: Install dependencies (CPU)
        shell: spack-bash {0}
        run: |
          spack -e . install -j 4 --use-buildcache auto --only dependencies --add bench-dolfinx@main
        # spack install --add fenics-dolfinx ninja py-fenics-ffcx

      - if: ${{ matrix.backend.runtime == 'cuda' || matrix.backend.runtime == 'rocm' }}
        name: Install dependencies (GPU)
        shell: spack-bash {0}
        run: |
          spack -e . install -j 4 --use-buildcache auto --only dependencies --add bench-dolfinx@main+${{ matrix.backend.runtime }} ${{ matrix.backend.driver }}
        # spack install --add fenics-dolfinx ninja py-fenics-ffcx

      - name: Generate Spack build-env
        shell: spack-bash {0}
        run: |
          spack -e . build-env --dump build_env.sh bench-dolfinx -- which python

      - if: ${{ matrix.backend.runtime == 'cpu' }}
        name: Build benchmark (CPU)
        shell: spack-bash {0}
        run: |
          source ./build_env.sh
          cmake -G Ninja -B build -S src/
          cmake --build build
          cmake --install build

      # - if: ${{ matrix.backend.runtime != 'cpu' }}
      #   name: Build benchmark (GPU)
      #   shell: spack-bash {0}
      #   run: |
      #     spack env activate .
      #     spack find
      #     spack find --loaded
      #     which python
      #     cmake -G Ninja -D${{ matrix.backend.cmake_opt }}  -B build -S src/
      #     cmake --build build
      #     cmake --install build

      - if: ${{ matrix.backend.runtime == 'cpu' }}
        name: Run benchmark (CPU)
        shell: spack-bash {0}
        run: |
          ./build/bench_dolfinx --ndofs=1000 --degree=3 --qmode=0 --nreps=1 --mat_comp --float=64 --json a.json
          mpirun -n 2 ./build/bench_dolfinx --ndofs=500 --degree=3 --qmode=0 --nreps=1 --mat_comp --float=64 --json b.json

      - if: ${{ matrix.backend.runtime == 'cpu' }}
        name: Post-process
        shell: spack-bash {0}
        run: |
          spack env activate .
          spack install --add py-numpy
          python src/test_output.py a.json
          python src/test_output.py b.json

      - name: Push packages and update index
        shell: spack-bash {0}
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          spack -e . buildcache push --only dependencies --with-build-dependencies \
            --base-image ubuntu:24.04 --update-index local-buildcache
        if: ${{ !cancelled() }}
